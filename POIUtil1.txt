<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.huateng.uw.modules.insurancecheck.dao.ReceiptDao">
	<select id="queryByCondition" parameterType="java.util.Map" resultType="com.huateng.uw.modules.insurancecheck.dto.ReceiptDto">
		SELECT  DISTINCT
		f1.policy_num policyNum,
		(select c.customer_name from uw_customer_info c,uw_policy_customer cc
		where c.customer_code = cc.customer_code and
		cc.policy_num =f1.policy_num and cc.role_code= #{roleCode})
		customerName,
		DATE_FORMAT(f1.acquire_date,'%Y/%m/%d')
		policyAcquireDate,
		DATE_FORMAT(f1.uw_pass_date,'%Y/%m/%d')
		checkPassTime,
		DATE_FORMAT(f4.return_time,'%Y/%m/%d')
		returnTime,
		f1.agent_code businessmanName,
		f5.org_name,
		f6.enum_desc channelType,
		f9.enum_desc AS returnStatus,
		f10.enum_desc  AS policyStatus,
		f12.enum_desc AS contractCheckstatus
		FROM
		uw_insurance f1
		LEFT JOIN (
		SELECT
		f3.customer_name,
		f3.ctf_id,
		f2.customer_code,
		f2.policy_num,
		f2.role_code
		FROM
		uw_policy_customer f2,
		uw_customer_info f3
		WHERE
		f2.customer_code = f3.customer_code
		) a ON a.policy_num = f1.policy_num
		LEFT JOIN uw_return_notify f4 ON f4.policy_num = f1.policy_num
		LEFT JOIN fwd_organization f5 ON f5.org_code = f1.org_code
		LEFT JOIN uw_enum f6 ON f6.parent_id = '573'
		AND f6.enum_code = f1.channel_type
		LEFT JOIN uw_return_visit f7 ON f7.policy_num = f1.policy_num
		LEFT JOIN uw_enum f9 ON f9.parent_id = '75'
		AND f9.enum_code = f7.visit_status
		LEFT JOIN uw_enum f10 ON f10.parent_id = '260'
		AND f10.enum_code = f1.policy_status
		LEFT JOIN uw_contract_return f11 ON f11.policy_num = f1.policy_num
		LEFT JOIN uw_enum f12 ON f12.parent_id = '395'
		AND f12.enum_code=f11.contract_result
		LEFT JOIN uw_pending f13 ON f13.policy_num=f1.policy_num
		left join uw_contract_return f14 on f14.policy_num=f1.policy_num
		LEFT JOIN  uw_return_notify f15  on f1.policy_num=f15.policy_num
		LEFT JOIN   uw_insurance_product f16  ON f16 .policy_num=f1.policy_num
		and  f1.is_one_year='0' and f16.is_main='Y'
		WHERE
		f5.org_code IN (
		SELECT
		org_code
		FROM
		fwd_organization o1
		LEFT JOIN fwd_role_org fr1 ON fr1.org_id =
		o1.id
		LEFT JOIN sys_user_role sur ON sur.role_id = fr1.role_id
		WHERE
		sur.user_id = #{userId}
		)
		and
		f1.org_code=f5.org_code and f6.enum_code=f1.channel_type and
		f6.parent_id='573'
		<if test="policyNum !=null and policyNum.trim()!=''">/*查询保单号*/
			and (f1.policy_num =#{policyNum} or (a.ctf_id =#{policyNum} and a.role_code in ('01','02')) or (a.customer_name =#{policyNum} and a.role_code in ('01','02','03')))
		</if>
		<if test="policyStatus !=null and policyStatus.trim()!='' and policyStatus!='02' and policyStatus!='01' and policyStatus!='03' ">/*查询保单保单状态*/
			and f1.policy_status =#{policyStatus}
		</if>
		<if test="policyStatus !=null and policyStatus.trim()!='' and policyStatus=='01'  " >/*查询保单保单状态中01待合同质检的状态*/
			and f14.is_contract_check=#{policyStatus} and f14.is_checked='02' and f1.policy_status='IF'
		</if>
		<if test="policyStatus !=null and policyStatus.trim()!='' and policyStatus =='02'">/*查询保单保单状态 02待问题件跟踪的状态*/
			and f13.pending_status =#{policyStatus}
		</if>
		<if test="policyStatus !=null and policyStatus.trim()!='' and policyStatus =='03'">/*查询保单保单状态 03待保单回执的状态*/
			 and  f15.return_time is not null and f15.feedback_time is  null
		</if>
		<if test="underwritingonClusion !=null and underwritingonClusion.trim()!=''">/*查询核保结论的状态*/
			and f1.policy_status =#{underwritingonClusion}
		</if>
		<if test="startDate != null and startDate != ''">AND f1.uw_pass_date <![CDATA[>=]]>#{startDate}</if>
		<if test="endDate != null and endDate != ''">AND f1.uw_pass_date <![CDATA[<=]]>#{endDate}</if>
		<if test="orgCodes!=null">
			and f1.org_code in
			<foreach collection="orgCodes" item="orgCode" open="("
					 separator="," close=")">
				#{orgCode}
			</foreach>
		</if>
		ORDER BY f1.acquire_date,f1.policy_num asc
		limit #{page},#{limit}
	</select>
	<update id="changeFeedback"
			parameterType="com.huateng.uw.modules.insurancecheck.entity.ReturnNotifyEntity">
		update uw_return_notify
		<set>
			<if test=" policyNum!= null">`policy_num` = #{policyNum}, </if>
			<if test=" returnTime!= null">`return_time` = #{returnTime}, </if>
			<if test=" feedbackTime!= null">`feedback_time` = #{feedbackTime}, </if>
			<if test=" mum!= null">`mum` = #{mum}, </if>
			<if test=" returnStatus!= null">`return_status` = #{returnStatus}</if>
		</set>
		where id = #{id}
	</update>


	<select id="queryByNum"
			resultType="com.huateng.uw.modules.insurancecheck.entity.ReturnNotifyEntity">
		select * from uw_return_notify	where policy_num=#{policyNum}
	</select>

	<insert id="save"
			parameterType="com.huateng.uw.modules.insurancecheck.entity.TimingReturnEntity">
		insert into uw_return_notify
		(
		`policy_num`,
		`return_time`,
		`feedback_time`,
		`mum`,
		`return_status`,
		`massage_send_time`,
		`massage_send` ,
		`massage_content`
		)
		values
		(
		#{policyNum},
		#{returnTime},
		#{feedbackTime},
		#{mum},
		#{returnStatus},
		#{massageSendTime},
		#{massageSend},
		#{massageContent}
		)
	</insert>
	<!--保存定时回执任务 -->
	<insert id="saveTimeTask"
			parameterType="com.huateng.uw.modules.insurancecheck.entity.TimingReturnEntity">
		insert into uw_timing_return
		(
		`policy_num`,
		`return_time`,
		`feedback_time`,
		`mum`,
		`return_status`,
		`massage_send_time`,
		`massage_send` ,
		`massage_content`
		)
		values
		(
		#{policyNum},
		#{returnTime},
		#{feedbackTime},
		#{mum},
		#{returnStatus},
		#{massageSendTime},
		#{massageSend},
		#{massageContent}
		)
	</insert>
	<!--更新定时任务表-->
	<update id="updateTimeTask"
			parameterType="com.huateng.uw.modules.insurancecheck.entity.TimingReturnEntity">
		update uw_timing_return
		<set>
			<if test="policyNum != null">`policy_num` = #{policyNum}, </if>
			<if test="returnTime != null">`return_time` = #{returnTime}, </if>
			<if test="feedbackTime != null">`feedback_time` = #{feedbackTime}, </if>
			<if test="mum != null">`mum` = #{mum}, </if>
			<if test="returnStatus != null">`return_status` = #{returnStatus}, </if>
			<if test="massageSendTime != null">`massage_send_time` = #{massageSendTime}, </if>
			<if test="massageSend != null">`massage_send` = #{massageSend}, </if>
			<if test="massageContent != null">`massage_content` = #{massageContent} </if>
		</set>
		where id = #{id}
	</update>
	<!--更新回执表-->
	<update id="updateRecipt"
			parameterType="com.huateng.uw.modules.insurancecheck.entity.ReturnNotifyEntity">
		update uw_return_notify
		<set>
			<if test="policyNum != null">`policy_num` = #{policyNum}, </if>
			<if test="returnTime != null">`return_time` = #{returnTime}, </if>
			<if test="feedbackTime != null">`feedback_time` = #{feedbackTime}, </if>
			<if test="mum != null">`mum` = #{mum}, </if>
			<if test="returnStatus != null">`return_status` = #{returnStatus}, </if>
			<if test="massageSendTime != null">`massage_send_time` = #{massageSendTime}, </if>
			<if test="massageSend != null">`massage_send` = #{massageSend}, </if>
			<if test="massageContent != null">`massage_content` = #{massageContent} </if>
		</set>
		where `policy_num` = #{policyNum}
	</update>


	<delete id="delete">
		delete from uw_timing_return where id =#{id}
	</delete>

	<select id="queryList"
			resultType="com.huateng.uw.modules.insurancecheck.entity.ReturnNotifyEntity">
		select
		u.id,
		u.policy_num,
		u.return_time,
		u.feedback_time,
		u.mum,
		u.return_status
		from uw_timing_return u
	</select>
	<!--通过保单号查询回执 -->
	<select id="queryReceipt"
			resultType="com.huateng.uw.modules.insurancecheck.entity.ReturnNotifyEntity">
		SELECT
		n.id,
		n.policy_num,
		n.mum,
		n.return_time,
		n.return_status,
		n.feedback_time,
		n.massage_send,
		n.massage_content,
		n.massage_send_time
		from uw_return_notify n WHERE n.policy_num=#{policyNum}
	</select>
	<!--综合查询获取核保结论状态-->
	<select id="getUnderwritingonClusion" resultType="com.huateng.uw.modules.sys.dto.EnumeChildInfo">
		SELECT
		f1.enum_desc,
		f1.enum_code
		FROM
		uw_enum f1
		WHERE
		f1.parent_id = '1157'
	</select>
	<!-- 综合查询获取保单状态-->
	<select id="getPolicyStatus" resultType="com.huateng.uw.modules.sys.dto.EnumeChildInfo">
		SELECT
		f1.id,
		f1.enum_desc,
		f1.enum_code
		FROM
		uw_enum f1
		WHERE
		f1.parent_id = '1147'
	</select>


	<!--综合查询保单号输入校验 -->
	<select id="getPolicyNum"  resultType="java.lang.String">
		select policy_num  FROM uw_insurance t1 WHERE t1.policy_num=#{policyNum}
	</select>
	<!--综合查询分页总页数 -->
	<select id="getCount"  resultType="int">
		SELECT  COUNT( DISTINCT f1.policy_num)
		FROM
		uw_insurance f1
		LEFT JOIN (
		SELECT
		f3.customer_name,
		f3.ctf_id,
		f2.customer_code,
		f2.policy_num,
		f2.role_code
		FROM
		uw_policy_customer f2,
		uw_customer_info f3
		WHERE
		f2.customer_code = f3.customer_code
		) a ON a.policy_num = f1.policy_num
		LEFT JOIN uw_return_notify f4 ON f4.policy_num = f1.policy_num
		LEFT JOIN fwd_organization f5 ON f5.org_code = f1.org_code
		LEFT JOIN uw_enum f6 ON f6.parent_id = '573'
		AND f6.enum_code = f1.channel_type
		LEFT JOIN uw_return_visit f7 ON f7.policy_num = f1.policy_num
		LEFT JOIN uw_enum f9 ON f9.parent_id = '75'
		AND f9.enum_code = f7.visit_status
		LEFT JOIN uw_enum f10 ON f10.parent_id = '260'
		AND f10.enum_code = f1.policy_status
		LEFT JOIN uw_contract_return f11 ON f11.policy_num = f1.policy_num
		LEFT JOIN uw_enum f12 ON f12.parent_id = '395'
		AND f12.enum_code=f11.contract_result
		LEFT JOIN uw_pending f13 ON f13.policy_num=f1.policy_num
		left join uw_contract_return f14 on f14.policy_num=f1.policy_num
		LEFT JOIN  uw_return_notify f15  on f1.policy_num=f15.policy_num
		LEFT JOIN   uw_insurance_product f16  ON f16 .policy_num=f1.policy_num
		and f1.is_one_year='0' and f16.is_main='Y'
		WHERE
		f5.org_code IN (
		SELECT
		org_code
		FROM
		fwd_organization o1
		LEFT JOIN fwd_role_org fr1 ON fr1.org_id =
		o1.id
		LEFT JOIN sys_user_role sur ON sur.role_id = fr1.role_id
		WHERE
		sur.user_id = #{userId}
		)
		and
		f1.org_code=f5.org_code and f6.enum_code=f1.channel_type and
		f6.parent_id='573'
		<if test="policyNum !=null and policyNum.trim()!=''">/*查询保单号*/
			and (f1.policy_num =#{policyNum} or (a.ctf_id =#{policyNum} and a.role_code in ('01','02')) or (a.customer_name =#{policyNum} and a.role_code in ('01','02','03')))
		</if>
		<if test="policyStatus !=null and policyStatus.trim()!='' and policyStatus!='02' and policyStatus!='01' and policyStatus!='03' ">/*查询保单保单状态*/
			and f1.policy_status =#{policyStatus}
		</if>
		<if test="policyStatus !=null and policyStatus.trim()!='' and policyStatus=='01'  " >/*查询保单保单状态中01待合同质检的状态*/
			AND f1.policy_status= 'IF' and (f4.is_contract_check = #{policyStatus} or f4.is_checked='02')
		</if>
		<if test="policyStatus !=null and policyStatus.trim()!='' and policyStatus =='02'">/*查询保单保单状态 02待问题件跟踪的状态*/
			and f13.pending_status =#{policyStatus}
		</if>
		<if test="policyStatus !=null and policyStatus.trim()!='' and policyStatus =='03'">/*查询保单保单状态 03待保单回执的状态*/
			 and  f15.return_time is not null and f15.feedback_time is  null
		</if>
		<if test="underwritingonClusion !=null and underwritingonClusion.trim()!=''">/*查询核保结论的状态*/
			and f1.policy_status =#{underwritingonClusion}
		</if>
		<if test="startDate != null and startDate != ''">AND f1.uw_pass_date <![CDATA[>=]]>#{startDate}</if>
		<if test="endDate != null and endDate != ''">AND f1.uw_pass_date <![CDATA[<=]]>#{endDate}</if>
		<if test="orgCodes!=null">
			and f1.org_code in
			<foreach collection="orgCodes" item="orgCode" open="("
					 separator="," close=")">
				#{orgCode}
			</foreach>
		</if>
		ORDER BY f1.acquire_date,f1.policy_num asc
		limit #{page},#{limit}
	</select>
	<!--保单回执时间查询（外部接口）-->
	<select id="queryPolicyAckDate" resultType="com.huateng.uw.modules.insurancecheck.dto.PolicyAckDateDto">
		select urn.policy_num AS policyNum,
		DATE_FORMAT(urn.feedback_time,'%Y%m%d') AS acknowledgementDate
		 from uw_return_notify urn
	</select>	
	
	<!-- 综合查询基础条件查询  -->
	<select id="queryByBaseCondition" parameterType="java.util.Map" resultType="com.huateng.uw.modules.insurancecheck.dto.ReceiptDto">
		SELECT DISTINCT
		    f1.policy_num policyNum,
		    DATE_FORMAT(f1.acquire_date,'%Y/%m/%d') policyAcquireDate,
		    DATE_FORMAT(f1.uw_pass_date,'%Y/%m/%d') checkPassTime
		FROM
			uw_insurance f1
		<if test = "policyNum !=null and policyNum.trim()!=''" >
		INNER JOIN (
		  (
		    SELECT DISTINCT
			  a.policy_num
		    FROM
			  uw_insurance a
		    WHERE
			  a.policy_num like concat('%',#{policyNum},'%')
		  )
		  UNION ALL
		    (
		      SELECT DISTINCT
			    b.policy_num
		      FROM
			    uw_insurance b
			  LEFT JOIN uw_policy_customer f2 ON f2.policy_num = b.policy_num
			  LEFT JOIN uw_customer_info f3 ON f3.customer_code = f2.customer_code  
		      WHERE
			(f3.ctf_id  like concat('%',#{policyNum},'%'))
			  AND f2.role_code IN ('01', '02')  
		    )
		  UNION ALL
		    (
		      SELECT DISTINCT
			    c.policy_num
		      FROM
			    uw_insurance c
			  LEFT JOIN uw_policy_customer f8 ON f8.policy_num = c.policy_num
			  LEFT JOIN uw_customer_info f9 ON f9.customer_code = f8.customer_code  
		      WHERE
			f9.customer_name like concat('%',#{policyNum},'%')
			  AND f8.role_code IN ('01', '02','03')
			)
		) t ON t.policy_num = f1.policy_num
		</if>
		
		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus=='01'" >
		LEFT JOIN uw_contract_return f4 ON f4.policy_num = f1.policy_num
		</if>
		
		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus =='03'" >
		LEFT JOIN uw_return_notify f5 ON f5.policy_num = f1.policy_num
		LEFT JOIN uw_insurance_product f6 ON f6.policy_num = f1.policy_num
		</if>
		
		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus =='02'" >
		LEFT JOIN uw_pending f7 ON f7.policy_num = f1.policy_num
		</if>
		<if test = "(checkId !=null and checkId.trim()!='' ) or (userName !=null and userName.trim()!='')" >
			  LEFT JOIN uw_user_task f10 ON f10.task_code = f1.policy_num
		</if>
		<if test = "(checkId !=null and checkId.trim()!='' ) or (userName !=null and userName.trim()!='')" >
		   LEFT JOIN sys_user f11 ON f11.user_id = f10.check_id
		</if>
		WHERE 1 =1
		<if test = "checkStatus == 01" >
			AND f10.check_id IS NOT NULL
		</if>

		<if test = "checkStatus == 02" >
			AND f11.check_id IS NULL
		</if>
		<if test = "checkId !=null and checkId.trim()!=''  " >
			AND f11.user_id = #{checkId}
		</if>

		<if test = "userName !=null and userName.trim()!=''" >
			AND f11.username like concat('%',#{userName},'%')
		</if>
		
		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus!='02' and policyStatus!='01' and policyStatus!='03'" >
	        AND f1.policy_status = #{policyStatus}
		</if>
		
		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus=='01'" >
			AND f1.policy_status= 'IF' and f4.contract_result is NULL AND (f4.is_contract_check = #{policyStatus} or f4.is_checked='02')
		</if>
		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus =='02'" >
		    AND f7.pending_status = #{policyStatus} and f1.policy_status='UW'
		</if>
		
		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus =='03'" >
			AND f6.is_main = 'Y'
			AND f5.return_time IS NOT NULL
			AND f5.feedback_time IS NULL
			AND f1.is_one_year='0'
		</if>
		
		<if test = "underwritingonClusion !=nul" >
		    AND f1.policy_status in
			<foreach collection="underwritingonClusion" item="clusion" open="("
					 separator="," close=")">
				#{clusion}
			</foreach>
		</if>
		
		<if test = "startDate != null and startDate != ''" >
		    AND f1.uw_pass_date <![CDATA[>=]]>#{startDate}
		</if>
		
		<if test = "endDate != null and endDate != ''" >
		    AND f1.uw_pass_date <![CDATA[<=]]>#{endDate}
		</if>


		<if test="orgCodes!=null">
			AND f1.org_code in
			<foreach collection="orgCodes" item="orgCode" open="("
					 separator="," close=")">
				#{orgCode}
			</foreach>
	    </if>
		ORDER BY
			f1.acquire_date DESC,
			f1.policy_num ASC
		LIMIT #{page},#{limit}
	</select>
	
	<!-- 综合查询基础条件查询页数  -->
	<select id="getCountByBaseCondition" parameterType="java.util.Map" resultType="int">
		SELECT
		    COUNT( DISTINCT f1.policy_num)
		FROM
		uw_insurance f1
		<if test = "policyNum !=null and policyNum.trim()!=''" >
			INNER JOIN (
			(
			SELECT DISTINCT
			a.policy_num
			FROM
			uw_insurance a
			WHERE
			a.policy_num like concat('%',#{policyNum},'%')
			)
			UNION ALL
			(
			SELECT DISTINCT
			b.policy_num
			FROM
			uw_insurance b
			LEFT JOIN uw_policy_customer f2 ON f2.policy_num = b.policy_num
			LEFT JOIN uw_customer_info f3 ON f3.customer_code = f2.customer_code
			WHERE
			(f3.ctf_id  like concat('%',#{policyNum},'%'))
			AND f2.role_code IN ('01', '02')
			)
			UNION ALL
			(
			SELECT DISTINCT
			c.policy_num
			FROM
			uw_insurance c
			LEFT JOIN uw_policy_customer f8 ON f8.policy_num = c.policy_num
			LEFT JOIN uw_customer_info f9 ON f9.customer_code = f8.customer_code
			WHERE
			f9.customer_name like concat('%',#{policyNum},'%')
			AND f8.role_code IN ('01', '02','03')
			)
			) t ON t.policy_num = f1.policy_num
		</if>

		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus=='01'" >
			LEFT JOIN uw_contract_return f4 ON f4.policy_num = f1.policy_num
		</if>

		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus =='03'" >
			LEFT JOIN uw_return_notify f5 ON f5.policy_num = f1.policy_num
			LEFT JOIN uw_insurance_product f6 ON f6.policy_num = f1.policy_num
		</if>

		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus =='02'" >
			LEFT JOIN uw_pending f7 ON f7.policy_num = f1.policy_num
		</if>
		<if test = "(checkId !=null and checkId.trim()!='' ) or (userName !=null and userName.trim()!='')" >
			LEFT JOIN uw_user_task f10 ON f10.task_code = f1.policy_num
		</if>
		<if test = "(checkId !=null and checkId.trim()!='' ) or (userName !=null and userName.trim()!='')" >
			LEFT JOIN sys_user f11 ON f11.user_id = f10.check_id
		</if>
		WHERE 1 =1
		<if test = "checkStatus == 01" >
			AND f10.check_id IS NOT NULL
		</if>

		<if test = "checkStatus == 02" >
			AND f11.check_id IS NULL
		</if>
		<if test = "checkId !=null and checkId.trim()!=''  " >
			AND f11.user_id = #{checkId}
		</if>

		<if test = "userName !=null and userName.trim()!=''" >
			AND f11.username like concat('%',#{userName},'%')
		</if>

		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus!='02' and policyStatus!='01' and policyStatus!='03'" >
			AND f1.policy_status = #{policyStatus}
		</if>

		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus=='01'" >
			AND f1.policy_status= 'IF' and f4.contract_result is NULL AND (f4.is_contract_check = #{policyStatus} or f4.is_checked='02')
		</if>
		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus =='02'" >
			AND f7.pending_status = #{policyStatus} and f1.policy_status='UW'
		</if>

		<if test = "policyStatus !=null and policyStatus.trim()!='' and policyStatus =='03'" >
			AND f6.is_main = 'Y'
			AND f5.return_time IS NOT NULL
			AND f5.feedback_time IS NULL
			AND f1.is_one_year='0'
		</if>

		<if test = "underwritingonClusion !=nul" >
			AND f1.policy_status in
			<foreach collection="underwritingonClusion" item="clusion" open="("
					 separator="," close=")">
				#{clusion}
			</foreach>
		</if>

		<if test = "startDate != null and startDate != ''" >
			AND f1.uw_pass_date <![CDATA[>=]]>#{startDate}
		</if>

		<if test = "endDate != null and endDate != ''" >
			AND f1.uw_pass_date <![CDATA[<=]]>#{endDate}
		</if>


		<if test="orgCodes!=null">
			AND f1.org_code in
			<foreach collection="orgCodes" item="orgCode" open="("
					 separator="," close=")">
				#{orgCode}
			</foreach>
		</if>
	</select>
	
	<!-- 综合查询显示机构名称 -->
	<select id="getOrgnameByBaseCondition" resultType="String">
		SELECT DISTINCT
			f2.org_name
		FROM
			uw_insurance f1,
			fwd_organization f2
		WHERE
			f1.org_code = f2.org_code
		AND f1.policy_num = #{policyNum}
	</select>
	<!-- 综合查询显示渠道 -->
	<select id="getChannelTypeByBaseCondition" resultType="String">
		SELECT DISTINCT
			f2.enum_desc
		FROM
			uw_insurance f1,
			uw_enum f2
		WHERE
			f1.channel_type = f2.enum_code
		AND f2.parent_id = '573'
		AND f1.policy_num = #{policyNum}
	</select>
	
	<!-- 综合查询显示投保人姓名 -->
	<select id="getCustomerNameByBaseCondition" resultType="String">
		SELECT DISTINCT
			f3.customer_name
		FROM
			uw_insurance f1,
			uw_policy_customer f2,
			uw_customer_info f3
		WHERE
			f1.policy_num = f2.policy_num
		AND f2.customer_code = f3.customer_code
		AND f1.policy_num = #{policyNum}
		AND f2.role_code = '01'
	</select>

	<!-- 综合查询显示用户姓名 -->
	<select id="getUserNameByBaseCondition" resultType="String">
       SELECT
		    t.check_id
		FROM
		    uw_user_task t
		WHERE
		    t.task_code = #{policyNum}
	</select>


	
	<!-- 综合查询显示回执下发日期 -->
	<select id="getReturntimeByBaseCondition" resultType="String">
		SELECT DISTINCT
			DATE_FORMAT(f2.return_time, '%Y/%m/%d')
		FROM
			uw_return_notify f2
		WHERE
			f2.policy_num = #{policyNum}
	</select>
	
	<!-- 综合查询显示保单状态 -->
	<select id="getPolicyStatusByBaseCondition" resultType="String">
		SELECT DISTINCT
			f2.enum_desc
		FROM
			uw_insurance f1,
			uw_enum f2
		WHERE
			f1.policy_status = f2.enum_code
		AND f2.parent_id = '260'
		AND f1.policy_num = #{policyNum}
	</select>
	
	<!-- 综合查询显示合同质检状态 -->
	<select id="getContractResultByBaseCondition" resultType="String">
		SELECT DISTINCT
			f2.enum_desc
		FROM
			uw_insurance f1,
			uw_enum f2,
			uw_contract_return f3
		WHERE
			f1.policy_num = f3.policy_num
		AND f3.contract_result = f2.enum_code
		AND f2.parent_id = '395'
		AND f1.policy_num = #{policyNum}
	</select>
	
	<!-- 综合查询显示回执状态 -->
	<select id="getReturnStatusByBaseCondition" resultType="String">
		select
  case when  (f.return_time is not null and f.feedback_time is not null) then '已回执'
     when  (f.return_time is not null and f.feedback_time is  null ) then '待回执'
     when  (f.return_time is  null and f.feedback_time is  null and t.indemnify_period is null) then '不回执'
     else  '未下发' end   AS returnStatus
     from 	`uw_insurance` f1
     LEFT JOIN  uw_return_notify f  on f1.policy_num=f.policy_num
  LEFT JOIN   uw_insurance_product t  ON t.policy_num=f1.policy_num AND f1.is_one_year='0' and t.is_main='Y'
  LEFT JOIN uw_return_notify f4 ON f4.policy_num = f1.policy_num
  where f1.`policy_num`= #{policyNum} and f1.policy_status='IF'
	</select>
	
	<!-- 综合查询根据保单号框查询机构 -->
	<select id="queryCodesByBaseCondition" parameterType="java.util.Map" resultType="String">
		SELECT DISTINCT
		    f1.org_code
		FROM
			uw_insurance f1
		INNER JOIN (
		  (
		    SELECT DISTINCT
			  a.policy_num
		    FROM
			  uw_insurance a
		    WHERE
			  a.policy_num = #{policyNum}
		  )
		  UNION ALL
		    (
		      SELECT DISTINCT
			    b.policy_num
		      FROM
			    uw_insurance b
			  LEFT JOIN uw_policy_customer f2 ON f2.policy_num = b.policy_num
			  LEFT JOIN uw_customer_info f3 ON f3.customer_code = f2.customer_code  
		      WHERE
			    f3.ctf_id = #{policyNum}
			  AND f2.role_code IN ('01', '02')  
		    )
		  UNION ALL 
		    (
		      SELECT DISTINCT
			    c.policy_num
		      FROM
			    uw_insurance c
			  LEFT JOIN uw_policy_customer f8 ON f8.policy_num = c.policy_num
			  LEFT JOIN uw_customer_info f9 ON f9.customer_code = f8.customer_code  
		      WHERE
			    f9.customer_name = #{policyNum}
			  AND f8.role_code IN ('01', '02','03')  
		    )
		) t ON t.policy_num = f1.policy_num 
	</select>
	
	<!-- 综合查询获取级联核保结论 -->
	<select id="getCascadeResult" resultType="com.huateng.uw.modules.sys.dto.EnumeChildInfo">
		SELECT
		f1.id,
		f1.enum_desc,
		f1.enum_code
		FROM
		uw_enum f1
		WHERE
		f1.parent_id = #{id}
	</select>
</mapper>